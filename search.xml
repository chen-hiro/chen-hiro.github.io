<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mybatis学习1</title>
      <link href="posts/d870.html"/>
      <url>posts/d870.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>1、什么是框架</p><p>它是我们软件开发中的一套解决方案，不同的框架解决的是不同的问题。</p><p>使用框架的好处：</p><p>​            框架封装了很多的细节，是开发者可以使用极简的方式实现功能。大大提高开发效率</p><p>2、三层架构</p><p>​            表现层：</p><p>​                            是用于展示数据的</p><p>​            业务层：</p><p>​                            是处理业务需求</p><p>​            持久层：</p><p>​                            是和数据库交互的</p><p>3、持久层技术解决方案</p><p>​                JDBC技术：</p><p>​                                    Connection</p><p>​                                    PreparedStatement</p><p>​                                    ResultSet</p><p>Spring的JdbcTemplate：</p><p>​                                    Spring中对jdbc的简单封装</p><p>Apache的DBUtils：</p><p>​                                    它和Spring的JdbcTemplate很像，也是对Jdbc的简单封装</p><p>以上这些都不是框架</p><p>​                JDBC是规范</p><p>​                Spring的JdbcTemplate和Apache的DBUtils都只是工具类</p><p>4、mybatis的概述</p><p>​        mybatis是一个持久层框架，用java编写的。</p><p>​        它封装了jdbc操作的很多细节，使开发者只需要关注sql语句本身，而无需关注注册驱动，创建连接等繁杂过程</p><p>​        它使用了ORM思想实现了结果集的封装。</p><p>​    ORM：</p><p>​                Object Relational Mapping 对象关系映射</p><p>​                简单的说：</p><p>​                                就是把数据库表和实体类及实体类的属性对应起来</p><p>​                                让我们可以操作实体类就实现操作数据库表</p><p>​                                user                        User</p><p>​                                id                            userId</p><p>​                                user_name             userName</p><p>今天我们需要做到</p><p>​                实体类中的属性和数据库表的字段名称保持一致。</p><p>​                                user                        User</p><p>​                                id                             id</p><p>​                                user_name              user_name</p><p>5、mybatis的入门</p><p>​                mybatis的环境搭建</p><p>​                            第一步：创建maven工程并导入坐标</p><p>​                            第二步：创建实体类和dao的接口</p><p>​                            第三步：创建Mybatis的主配置文件</p><p>​                                                                    SqlMapConfig.xml</p><p>​                            第三步：创建映射配置文件</p><p>​                                                                    IUserDao.xml</p><p>​                    环境搭建的注意事项：</p><p>​                                第一个：创建IUserDao.xml 和 IUserDao.java时名称是为了和我们之前的知识保持一致。</p><p>​                                               在Mybatis中它把持久层的操作接口名称和映射文件页叫做：Mapper</p><p>​                                                所以：IUserDao 和 IUserMapper是一样的</p><p>​                                第二个：在idea中创建目录的时候，它和包不一样的</p><p>​                                             包在创建时：cn.hiro.dao它时三级结构</p><p>​                                             目录在创建时：cn.hiro.dao是一级目录</p><p>​                                第三个：mybatis的映射配置文件位置必须和dao接口的包结构相同</p><p>​                                第四个：映射配置文件的mapper标签namespace属性的取值必须是dao接口的全限定类名</p><p>​                                第五个：映射配置文件的操作配置（select），id属性的取值必须是dao接口的方法名</p><p>​                                当遵从了第三、四、五点之后，我们在开发中就无须再写dao的实现类。</p><p>​                    mybatis的入门案例</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        1.读取配置文件</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line"><span class="comment">//        2.创建SqlSessionFactory工厂</span></span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        SqlSessionFactory factory = builder.build(in);</span><br><span class="line"><span class="comment">//        3.使用工厂生产SqlSession对象</span></span><br><span class="line">        SqlSession session = factory.openSession();</span><br><span class="line"><span class="comment">//        4.使用Sqlsession创建Dao接口的代理对象</span></span><br><span class="line">        IUserDao userDao = session.getMapper(IUserDao.class);</span><br><span class="line"><span class="comment">//        5.使用代理对象执行方法</span></span><br><span class="line">        List&lt;User&gt; users = userDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : users){</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        }</span><br><span class="line"><span class="comment">//        6.释放资源</span></span><br><span class="line">        session.close();</span><br><span class="line">        in.close();</span><br></pre></td></tr></tbody></table></figure><p>注意事项：</p><p>​                不要忘记在映射配置中告知mybatis要封装到哪个实体类中</p><p>​                配置的方式：指定实体类的全限定类名</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--    指定映射配置文件的位置，映射配置文件指的是每个dao独立的配置文件--&gt;</span><br><span class="line">    &lt;mappers&gt;</span><br><span class="line">        &lt;mapper resource="cn/hiro/dao/IUserDao.xml"&gt;&lt;/mapper&gt;</span><br><span class="line">    &lt;/mappers&gt;</span><br></pre></td></tr></tbody></table></figure><p>mybatis基于注解的入门案例：</p><p>​                把IUserDao.xml移除,在dao接口的方法上使用@Select注解，并且指定SQL语句</p><p>​                同时需要在SqlMapConfig.xml中的mapper配置时，使用class属性指定dao接口的全限定类</p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--    指定映射配置文件的位置，映射配置文件指的是每个dao独立的配置文件</span><br><span class="line">        如果是用注解来配置的话，此处应该使用<span class="class"><span class="keyword">class</span>属性指定被注解的<span class="title">dao</span>全限定类名</span></span><br><span class="line"><span class="class">--&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">mappers</span>&gt;</span></span><br><span class="line">        &lt;mapper class="cn.hiro.dao.IUserDao"&gt;&lt;/mapper&gt;</span><br><span class="line">    &lt;/mappers&gt;</span><br></pre></td></tr></tbody></table></figure><p>明确：</p><p>​        我们在实际开发中，都是越简单越好，所以都是采用不写dao实现类的方式。</p><p>​        不管使用XML还是注解配置。</p><p>​        但是Mybatis它是支持写dao实现类的。</p><p>6、自定义Mybatis的分析：</p><p>​            mybatis在使用代理dao的方式实现增删改查时做什么事呢？</p><p>​                    只有两件事：</p><p>​                        第一：创建代理对象</p><p>​                        第二：在代理对象中调用selectList</p><p>​            自定义mybatis能通过入门案例看到类</p><p>​                    class Resources</p><p>​                    class SqlSessionFactoryBuilder</p><p>​                    interface SqlSessionFactory</p><p>​                    interface SqlSession</p><p><img src="https://i.loli.net/2021/02/20/OJis1Py35tRrEfZ.png" alt="image-20210220160132100"></p><p>总结：通过以上流程我们不难看出，无论是让mybatis帮我们创建代理对象还是直接使用mybatis提供的CRUD方法，其本质都是得到jdbc的Connection对象，执行对应sql语句，最终封装结果集。只是注解和xml配置文件两种开发模式在传递sql语句和返回值类型的方式上有所差异而已。具体如下图所示：</p><p><img src="https://i.loli.net/2021/02/20/lfe5OIycgWk2smB.png" alt="image-20210220123014557"></p><hr><p>OGNL表达式：</p><p>​                    Object    Graphic    Navigation    Language</p><p>​                    对象        图            导航                语言</p><p>​                    它是通过对象的取值方法来获取数据。在写法上把get个省略了。</p><p>​                    比如：我们获取用户的名称</p><p>​                                        类中的写法： user.getUsername();</p><p>​                                        OGNL表达式：user.username()</p><p>​                    mybatis中为什么能直接写username,而不是user.呢：</p><p>​                                        因为在parameterType中已经提供了属性所属的类，所以此时不需要写对象名</p><hr><p>1、连接池：</p><p>​                    我们在实际开发中都会使用连接池。</p><p>​                    因为它可以减少我们获取连接所消耗的时间</p><p>2、mybatis中的连接池</p><p>​                    mybatis连接池提供了3种方式的配置：</p><p>​                            配置的位置：</p><p>​                                            主配置文件SqlMapConfig.xml中的dataSource标签，type属性就是表示采用何种连接池方式</p><p>​                            type属性的取值：</p><p>​                                            POOLED    采用传统的javax.sql.DataSource规范中的连接池，mybatis中有针对规范的实现</p><p>​                                            UNPOOLED 采用传统的获取连接的方式，虽然也实现 Javax.sql.DataSource接口，但是并没                                                                 有使用池的思想。</p><p>​                                            JNDI    采用服务器提供的JNDI技术实现，来获取DataSource对象，不同的服务器所能拿到                                                        DataSource是不一样的。</p><p>​                                                        注意：如果不是web或者maven的war工程，是不能使用的。</p><p>​                                                                    我们课程中使用的是tomcat服务器，采用连接池就是jdbc连接池</p><p>3、mybatis中的事务<br>                什么是事务<br>                事务的四大特性ACID<br>                不考虑隔离性会产生的3个问题<br>                解决办法：四种隔离级别</p><p>​                它是通过sqlsession对象的commit方法和rollback方法实现事务的提交和回滚</p><hr><p>1、Mybatis中的延迟加载</p><p>​                问题：在一对多中，当我们有一个用户，它有100个账户。</p><p>​                        在查询用户的时候，要不要把关联的账户查出来？</p><p>​                        在查询账户的时候，要不要把关联的用户查出来？</p><p>​                        在查询用户时，用户下的账户信息应该是，什么时候使用，什么时候查询的。</p><p>​                        在查询账户时，账户的所属用户信息应该是随着账户查询时一起查询出来。</p><p>什么是延迟加载</p><p>​                        在真正使用数据时才发起查询，不用的时候不查询。按需加载（懒加载）</p><p>什么是立即加载</p><p>​                        不管用不用，只要一调用方法，马上发起查询。</p><p>在对应的四种表关系中：一对多，多对一，一对一，多对多<br>                        一对多，多对多：通常情况下我们都是采用延迟加载。<br>                        多对一，一对一：通常情况下我们都是采用立即加载。</p><p>2、Mybatis中的缓存</p><p>​                        什么是缓存</p><p>​                                            存在于内存中的临时数据。</p><p>​                        为什么使用缓存</p><p>​                                            减少和数据库的交互次数，提高执行效率。</p><p>​                        什么样的数据能使用缓存，什么样的数据不能使用</p><p>​                                            适用于缓存：</p><p>​                                                                经常查询并且不经常改变的。</p><p>​                                                                数据的正确与否对最终结果影响不大的。</p><p>​                                            不适用于缓存：<br>​                                                                经常改变的数据<br>​                                                                数据的正确与否对最终结果影响很大的。<br>​                                                                例如：商品的库存，银行的汇率，股市的牌价。</p><p>​                            Mybatis中的一级缓存和二级缓存</p><p>​                                            一级缓存：</p><p>​                                                        它指的是Mybatis中SqlSession对象的缓存。</p><p>​                                                        当我们执行查询之后，查询的结果会同时存入到SqlSession为我们提供一块区域中。</p><p>​                                                        该区域的结构是一个Map。当我们再次查询同样的数据，mybatis会先去sqlsession中</p><p>​                                                        查询是否有，有的话直接拿出来用。</p><p>​                                                        当SqlSession对象消失时，mybatis的一级缓存也就消失了。</p><p>​                                            二级缓存：</p><p>​                                                        它指的是Mybatis中SqlSessionFactory对象的缓存。由同一个SqlSessionFactory对象                                                        创建的SqlSession共享其缓存。                                                            </p><p>​                                                        二级缓存的使用步骤：</p><p>​                                                                            第一步：让Mybatis框架支持二级缓存（在SqlMapConfig.xml中配置）</p><p>​                                                                            第二步：让当前的映射文件支持二级缓存（在IUserDao.xml中配置）</p><p>​                                                                            第三步：让当前的操作支持二级缓存（在select标签中配置）</p><p>3、Mybatis中的注解开发<br>    环境搭建<br>    单表CRUD操作（代理Dao方式）<br>    多表查询操作<br>    缓存的配置</p>]]></content>
      
      
      <categories>
          
          <category> mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis框架计划</title>
      <link href="posts/7d43.html"/>
      <url>posts/7d43.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>第一天：mybatis入门</p><p>​             mybatis的概述</p><p>​             mybatis的环境搭建</p><p>​             mybatis入门案例</p><p>​             自定义mybatis框架（主要的目的是为了让大家了解mybatis中执行细节）</p><p>第二天：mybatis基本使用</p><p>​            mybatis的单表crud操作</p><p>​            mybatis的参数和返回值</p><p>​            mybatis的dao编写</p><p>第三天：mybatis的深入和多表</p><p>​            mybatis的连接池</p><p>​            mybatis的事务控制及设计的方法</p><p>​            mybatis的多表查询</p><p>​                            一对多（多对一）</p><p>​                            多对多</p><p>第四天：mybatis的缓存和注解开发</p><p>​                mybatis中的加载时机（查询的时机）</p><p>​                mybatis中的一级缓存和二级缓存</p><p>​                mybatis的注解开发</p><p>​                            单表CRUD</p><p>​                            多表查询</p>]]></content>
      
      
      <categories>
          
          <category> mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springmvc学习1</title>
      <link href="posts/b817.html"/>
      <url>posts/b817.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>1.springmvc框架</p><p>1.1什么是springmvc</p><p>springmvc是spring框架的一个模块，springmvc 和 spring 无需通过中间整合层进行整合</p><p>springmvc是一个基于mvc的web框架</p><p><img src="https://i.loli.net/2021/02/18/amxWvTr9w8kBIhG.jpg" alt="img"></p><p>1.2mvc在b/s系统下的应用</p><p>mvc是一个设计模式，mvc在b/s系统下的应用：</p>]]></content>
      
      
      <categories>
          
          <category> springmvc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springmvc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springmvc计划</title>
      <link href="posts/3a11.html"/>
      <url>posts/3a11.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>第一天：springmvc的基础知识</p><p>什么是springmvc？</p><p>​    前端控制器、处理器映射器、处理器适配器、视图解析器</p><p>springmvc入门程序</p><p>​    目的：对前端控制器、处理器映射器、处理器适配器、视图解析器学习</p><p>​    非注解的处理器映射器、处理器适配器</p><p>​    注解的处理器映射器、处理器适配器（掌握）</p><p>springmvc 和 mybatis 整合（掌握）</p><p>springmvc 注解开发：（掌握）</p><p>​    常用的注解学习</p><p>​    参数绑定（简单类型、pojo、集合类型）</p><p>​    自定义参数绑定（掌握）</p><p>springmvc 和 struts2区别</p><p>第二天：springmvc的高级应用</p><p>​    参数绑定（集合类型）</p><p>​    数据回显</p><p>​    上传图片</p><p>​    json数据交互</p><p>​    RESTful支持</p><p>​    拦截器</p>]]></content>
      
      
      <categories>
          
          <category> springmvc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springmvc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly添加全局吸底Aplayer</title>
      <link href="posts/41e2.html"/>
      <url>posts/41e2.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>插入Aplayer html<br>為了適配hexo-tag-aplayer，主題內置的Meting js 仍為1.2版本，並非最新的2.x版本。</p><p>Aplayer html 例子：</p><p>MARKDOWN</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="aplayer no-destroy" data-id="000PeZCQ1i4XVs" data-server="tencent" data-type="artist" data-fixed="true" data-mini="true" data-listFolded="false" data-order="random" data-preload="none" data-autoplay="true" muted&gt;&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><p>參數解釋</p><table><thead><tr><th>option</th><th>default</th><th>description</th></tr></thead><tbody><tr><td>data-id</td><td>require</td><td>song id / playlist id / album id / search keyword</td></tr><tr><td>data-server</td><td>require</td><td>music platform: netease, tencent, kugou, xiami, baidu</td></tr><tr><td>data-type</td><td>require</td><td>song, playlist, album, search, artist</td></tr><tr><td>data-fixed</td><td>false</td><td>enable fixed mode</td></tr><tr><td>data-mini</td><td>false</td><td>enable mini mode</td></tr><tr><td>data-autoplay</td><td>false</td><td>audio autoplay</td></tr><tr><td>data-theme</td><td>#2980b9</td><td>main color</td></tr><tr><td>data-loop</td><td>all</td><td>player loop play, values: ‘all’, ‘one’, ‘none’</td></tr><tr><td>data-order</td><td>list</td><td>player play order, values: ‘list’, ‘random’</td></tr><tr><td>data-preload</td><td>auto</td><td>values: ‘none’, ‘metadata’, ‘auto’</td></tr><tr><td>data-volume</td><td>0.7</td><td>default volume, notice that player will remember user setting, default volume will not work after user set volume themselves</td></tr><tr><td>data-mutex</td><td>true</td><td>prevent to play multiple player at the same time, pause other players when this player start play</td></tr><tr><td>data-lrctype</td><td>0</td><td>lyric type</td></tr><tr><td>data-listfolded</td><td>false</td><td>indicate whether list should folded at first</td></tr><tr><td>data-listmaxheight</td><td>340px</td><td>list max height</td></tr><tr><td>data-storagename</td><td>metingjs</td><td>localStorage key that store player setting</td></tr></tbody></table><p><code>require</code>代表着這些參數是必須要使用的，其它的參數則可以根據自己需要配置。</p><p>配置全局吸底，<code>data-fixed</code>和<code>data-mini</code>也必須配置，配置為<code>true</code></p><p>如果使用Pjax，則在class裏需添加<code>no-destroy</code>，這樣防止切換頁面時Aplayer被銷毀</p><p>把aplayer代碼插入到主題配置文件的inject.bottom去</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;div class="aplayer no-destroy" data-id="000PeZCQ1i4XVs" data-server="tencent" data-type="artist" data-fixed="true" data-mini="true" data-listFolded="false" data-order="random" data-preload="none" data-autoplay="true" muted&gt;&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><p>運行Hexo就可以看到網頁左下角出現了Aplayer</p><p>最後，如果你想切換頁面時，音樂不會中斷。請把主題配置文件的pjax設為true</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题Valine评论美化</title>
      <link href="posts/dadf.html"/>
      <url>posts/dadf.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h3 id="在-veditor-输入界面增加背景图"><a href="#在-veditor-输入界面增加背景图" class="headerlink" title="在 veditor 输入界面增加背景图"></a>在 veditor 输入界面增加背景图</h3><p><img src="https://img-blog.csdnimg.cn/20201001132557439.png" alt="在这里插入图片描述"><br>使用方法如下，将CSS加到博客样式文件中，文件路径如下：<br>X:\XX\HexoBlog\themes\Butterfly\source\css\index.styl</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#veditor {</span></span><br><span class="line"><span class="attr">background-image:</span> <span class="string">url(https://image.bestzuo.cn/images/20200708160947.gif!getwebp);</span></span><br><span class="line"><span class="attr">background-size:</span> <span class="string">contain;</span></span><br><span class="line"><span class="attr">background-repeat:</span> <span class="literal">no</span><span class="string">-repeat;</span></span><br><span class="line"><span class="attr">background-position:</span> <span class="string">right;</span></span><br><span class="line"><span class="attr">background-color:</span> <span class="string">rgba(255,</span> <span class="number">255</span><span class="string">,</span> <span class="number">255</span><span class="string">,</span> <span class="number">0</span><span class="string">);</span></span><br><span class="line"><span class="attr">resize:</span> <span class="string">vertical</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="number">12345678</span></span><br></pre></td></tr></tbody></table></figure><p>url 内的图片可以换成自己的图片。可以设置当鼠标聚焦于输入框时，背景图消失，输入框失去焦点时，背景图重新显示，代码如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#veditor:focus{</span></span><br><span class="line"><span class="attr">background-position-y:</span> <span class="string">200px;</span></span><br><span class="line"><span class="attr">transition:</span> <span class="string">all</span> <span class="number">0.</span><span class="string">2s</span> <span class="string">ease-in-out</span> <span class="string">0s;</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="number">1234</span></span><br></pre></td></tr></tbody></table></figure><p>其中的 200px 差不多代表了图片的高度，transition 中的 0.2s 代表了消失的时间，可以根据自己的图片进行调整。</p><h3 id="增加博主、小伙伴标识以及浏览器图标"><a href="#增加博主、小伙伴标识以及浏览器图标" class="headerlink" title="增加博主、小伙伴标识以及浏览器图标"></a>增加博主、小伙伴标识以及浏览器图标</h3><p><img src="https://img-blog.csdnimg.cn/20201001135428294.png" alt="在这里插入图片描述"></p><p>原生的 Valine 不支持这个美化，所以需要使用魔改的 Valine 文件，在配置文件中搜索Valine，将原来的js替换成魔改版<br><img src="https://img-blog.csdnimg.cn/20201001133513368.png" alt="在这里插入图片描述"></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//魔改版</span> <span class="string">Valine.min.js</span></span><br><span class="line"><span class="string">https://cdn.jsdelivr.net/gh/HCLonely/Valine@latest/dist/Valine.min.js</span></span><br><span class="line"><span class="number">12</span></span><br></pre></td></tr></tbody></table></figure><p>与原生的相比，魔改版多了以下功能：<br>①添加博主，小伙伴，访客标签<br>②添加浏览器和操作系统图标，需引入 fontawesome v5.0+ 的 CSS 样式<br>③邮箱检测更严格<br>④增加 QQ 邮箱识别（原版只能通过昵称栏输入 QQ 号识别）<br>⑤meta placeholder 可自定义<br>使用方法与原生的类似，不同的是可以多设置几个参数：</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th><th>默认</th><th>示例</th></tr></thead><tbody><tr><td>tagMeta</td><td>Array</td><td>标签要显示的文字</td><td>[“博主”,“小伙伴”,“访客”]</td><td>[“博主”,“小伙伴”,“访客”]</td></tr><tr><td>master</td><td>Array/String</td><td>md5 加密后的博主邮箱</td><td>[]</td><td>[“fe01ce2a7fbac8fafaed7c982a04e229”]</td></tr><tr><td>friends</td><td>Array/String</td><td>md5 加密后的博主邮箱</td><td>[]</td><td>[“fe01ce2a7fbac8fafaed7c982a04e229”]</td></tr><tr><td>metaPlaceholder</td><td>Object</td><td>meta placeholder 内容</td><td>{}</td><td>{“nick”:“昵称 / QQ 号”,“mail”:“邮箱 (必填)”}</td></tr><tr><td>verify</td><td>Boolean</td><td>评论时是否需要验证，需 jQuery 支持</td><td>false</td><td>true</td></tr></tbody></table><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>2.x.x版本修改X:\XX\HexoBlog\themes\Butterfly\layout\includes\comments\valine.pug<br><img src="https://img-blog.csdnimg.cn/2020100113512828.png" alt="在这里插入图片描述"></p><p>3.x.x版本修改X:\XX\HexoBlog\themes\Butterfly\layout\includes\third-party\comments\valine.pug<br><img src="https://img-blog.csdnimg.cn/20201001135159289.png" alt="在这里插入图片描述"></p><p>参考：<a href="https://blog.csdn.net/weixin_43868299/article/details/108894568">https://blog.csdn.net/weixin_43868299/article/details/108894568</a></p><table><thead><tr><th><img src="https://cdn.jsdelivr.net/gh/rigodlee/BLOGCDN/img/myphoto.jpg" alt="img"></th><th>姓名：shadow</th></tr></thead><tbody><tr><td><a href="https://www.shadowx.vip/">个人博客传送门</a></td><td></td></tr></tbody></table><h1 id="CSS-JS的使用"><a href="#CSS-JS的使用" class="headerlink" title="CSS/JS的使用"></a>CSS/JS的使用</h1><p>在主题文件夹的source目录下，有css和js两个文件夹，分别在里面创建一个css文件和js文件，把修改的代码贴进去保存</p><h1 id="CSS-JS的引用"><a href="#CSS-JS的引用" class="headerlink" title="CSS/JS的引用"></a>CSS/JS的引用</h1><ol><li>打开主题配置文件（butterfly.yml）</li><li>定位inject属性</li><li>其中head用于引入css，bottom用于引入js</li></ol><p>示例</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel="stylesheet"</span> <span class="string">href="/css/shadow.css"&gt;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel="stylesheet"</span> <span class="string">href="https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/plugins.min.css"&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src="/js/shadow.js"&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src="https://myhkw.cn/player/js/player.js"</span> <span class="string">id="myhk"</span> <span class="string">key="159611061656"</span> <span class="string">m="1"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></tbody></table></figure><p>引入css和js有两种方式，分别是相对路径引入和外链引入。相对路径就是把文件放在主题文件夹的source目录的css文件夹和js文件夹下，外链就是使用文件的外链地址。</p><h1 id="头像背景"><a href="#头像背景" class="headerlink" title="头像背景"></a>头像背景</h1><p>效果图：<br><img src="https://i.loli.net/2021/02/12/ukJzSCjpXf1woR8.png" alt="在这里插入图片描述"><br><img src="https://i.loli.net/2021/02/12/ukJzSCjpXf1woR8.png" alt="在这里插入图片描述"><br>CSS代码：</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 彩带 */</span></span><br><span class="line"><span class="selector-class">.card-info-avatar</span><span class="selector-pseudo">:hover</span> {</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(https://cdn.jsdelivr.net/gh/rigodlee/BLOGCDN/img/H3342af90d24b4d62b9bbfec9688ccc25M.gif);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 花 */</span></span><br><span class="line"><span class="comment">/* .card-info-avatar:hover {</span></span><br><span class="line"><span class="comment">  background: url(https://cdn.jsdelivr.net/gh/rigodlee/BLOGCDN/img/20200530181856.gif);</span></span><br><span class="line"><span class="comment">} */</span></span><br><span class="line">123456789</span><br></pre></td></tr></tbody></table></figure><h1 id="公告板图片"><a href="#公告板图片" class="headerlink" title="公告板图片"></a>公告板图片</h1><p>效果图：<br><img src="https://i.loli.net/2021/02/12/ukJzSCjpXf1woR8.png" alt="在这里插入图片描述"><br><img src="https://i.loli.net/2021/02/12/ukJzSCjpXf1woR8.png" alt="在这里插入图片描述"><br>在butterfly.yml中搜索card_announcement，使用img标签引用图片</p><h1 id="页脚美化"><a href="#页脚美化" class="headerlink" title="页脚美化"></a>页脚美化</h1><p>效果图：<br><img src="https://i.loli.net/2021/02/12/ukJzSCjpXf1woR8.png" alt="在这里插入图片描述"></p><h2 id="跳动的心"><a href="#跳动的心" class="headerlink" title="跳动的心"></a>跳动的心</h2><p>JS代码：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>{</span><br><span class="line">    $(<span class="string">'.copyright'</span>).html(<span class="string">'©2020 &lt;i class="fa-fw fas fa-heart card-announcement-animation cc_pointer"&gt;&lt;/i&gt; shadow'</span>);</span><br><span class="line">})</span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></tbody></table></figure><p>更多图标和动画效果可以查看<a href="https://fa5.dashgame.com/#/">FontAwesome5</a>的官网和文档</p><h2 id="网站运行时间"><a href="#网站运行时间" class="headerlink" title="网站运行时间"></a>网站运行时间</h2><p>JS代码：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>{</span><br><span class="line">        $(<span class="string">'.framework-info'</span>).html(<span class="string">'本站已运行&lt;SPAN id=span_dt_dt style="color: #fff;"&gt;&lt;/SPAN&gt;'</span>);</span><br><span class="line">    })</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_date_time</span>(<span class="params"></span>)</span>{</span><br><span class="line">    <span class="built_in">window</span>.setTimeout(<span class="string">"show_date_time()"</span>, <span class="number">1000</span>);</span><br><span class="line">    BirthDay=<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"5/2/2020 0:0:0"</span>);</span><br><span class="line">    today=<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    timeold=(today.getTime()-BirthDay.getTime());</span><br><span class="line">    sectimeold=timeold/<span class="number">1000</span></span><br><span class="line">    secondsold=<span class="built_in">Math</span>.floor(sectimeold);</span><br><span class="line">    msPerDay=<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span></span><br><span class="line">    e_daysold=timeold/msPerDay</span><br><span class="line">    daysold=<span class="built_in">Math</span>.floor(e_daysold);</span><br><span class="line">    e_hrsold=(e_daysold-daysold)*<span class="number">24</span>;</span><br><span class="line">    hrsold=<span class="built_in">Math</span>.floor(e_hrsold);</span><br><span class="line">    e_minsold=(e_hrsold-hrsold)*<span class="number">60</span>;</span><br><span class="line">    minsold=<span class="built_in">Math</span>.floor((e_hrsold-hrsold)*<span class="number">60</span>);</span><br><span class="line">    seconds=<span class="built_in">Math</span>.floor((e_minsold-minsold)*<span class="number">60</span>);</span><br><span class="line">    span_dt_dt.innerHTML=<span class="string">' &lt;font style=color:#2d85f0&gt;'</span>+daysold+<span class="string">'&lt;/font&gt; 天 &lt;font style=color:#f4433c&gt;'</span>+hrsold+<span class="string">'&lt;/font&gt; 时 &lt;font style=color:#ffbc32&gt;'</span>+minsold+<span class="string">'&lt;/font&gt; 分 &lt;font style=color:#0aa858&gt;'</span>+seconds+<span class="string">'&lt;/font&gt; 秒'</span>;</span><br><span class="line">    }</span><br><span class="line">    show_date_time();</span><br><span class="line"><span class="number">12345678910111213141516171819202122</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://i.loli.net/2021/02/12/ukJzSCjpXf1woR8.png" alt="在这里插入图片描述"><br>把代码中的new Date()修改成自己网站搭建的时间（月/日/年 时:分:秒）</p><h2 id="服务支持logo"><a href="#服务支持logo" class="headerlink" title="服务支持logo"></a>服务支持logo</h2><p>在butterfly.yml中搜索custom_text，把代码贴进去（不同版本可以有所不同，但都是footer属性中修改）</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'&lt;a href="https://console.upyun.com/" target="_blank" alt="又拍云" rel="nofollow"&gt;&lt;img src="https://s1.ax1x.com/2020/07/27/aPoebR.png" alt="又拍云" style="height: 1.7em; max-height: 1.8em;padding-bottom: 0px;"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://imgchr.com/" target="_blank" alt="路过图床" rel="nofollow"&gt;&lt;img src="https://s1.ax1x.com/2020/07/27/aPWF3j.png" alt="路过图床" style="height: 1.7em; max-height: 1.8em;padding-bottom: 0px;"&gt;&lt;/a&gt;'</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>logo</th><th>CDN</th></tr></thead><tbody><tr><td>阿里云</td><td><a href="https://cdn.jsdelivr.net/gh/rigodlee/BLOGCDN/img/aliyun.png">图片链接</a></td></tr><tr><td>腾讯云</td><td><a href="https://cdn.jsdelivr.net/gh/rigodlee/BLOGCDN/img/tencet.png">图片链接</a></td></tr><tr><td>又拍云</td><td><a href="https://cdn.jsdelivr.net/gh/rigodlee/BLOGCDN/img/upyun.png">图片链接</a></td></tr><tr><td>七牛云</td><td><a href="https://cdn.jsdelivr.net/gh/rigodlee/BLOGCDN/img/qiniuyun.png">图片链接</a></td></tr><tr><td>imgchr</td><td><a href="https://cdn.jsdelivr.net/gh/rigodlee/BLOGCDN/img/imgchr.png">图片链接</a></td></tr><tr><td>Google</td><td><a href="https://cdn.jsdelivr.net/gh/rigodlee/BLOGCDN/img/google.png">图片链接</a></td></tr><tr><td>JSDELIVR</td><td><a href="https://cdn.jsdelivr.net/gh/rigodlee/BLOGCDN/img/jsdelivr.png">图片链接</a></td></tr></tbody></table><h1 id="引入阿里iconfont图标"><a href="#引入阿里iconfont图标" class="headerlink" title="引入阿里iconfont图标"></a>引入阿里iconfont图标</h1><p>效果图：<br><img src="https://img-blog.csdnimg.cn/2020100411025455.png#pic_center" alt="在这里插入图片描述"><br>这个已经有大佬出了完整教程，<a href="https://www.antmoe.com/posts/80c43671/index.html">传送门</a></p><h1 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h1><p><img src="https://img-blog.csdnimg.cn/20201004110936389.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201004111022666.png" alt="在这里插入图片描述"><br>标签外挂源于<a href="https://github.com/volantis-x/hexo-theme-volantis">Volantis</a>主题，扩展的标签分别为 Checkbox &amp; Radio、富文本按钮、Folding、fancybox、span。文件下载地址：<a href="https://tzk.lanzous.com/b06m0pbmh">https://tzk.lanzous.com/b06m0pbmh</a><br>将下载后的文件添加到主题目录下的scripts的tags文件夹中<br><img src="https://img-blog.csdnimg.cn/202010041120096.png#pic_center" alt="在这里插入图片描述"><br>接下来引入 css 即可：<a href="https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/plugins.min.css">https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/plugins.min.css</a><br>标签外挂的具体语法参考<a href="https://volantis.js.org/v2/tag-plugins/#Checkbox-amp-Radio">Volantis标签文档</a></p><p>参考：<a href="https://blog.csdn.net/weixin_43868299/article/details/108916605">https://blog.csdn.net/weixin_43868299/article/details/108916605</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为你的hexo博客添加全局吸底并且收入侧边栏的Aplaye</title>
      <link href="posts/78b9.html"/>
      <url>posts/78b9.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="1-引入aplayer-pug"><a href="#1-引入aplayer-pug" class="headerlink" title="1.引入aplayer.pug"></a>1.引入aplayer.pug</h2><p>找到主题的入口文件或者head、foot这种文件引入<strong>aplayer.pug</strong>(这里以<strong>Butterfly</strong>为例)</p><p>打开 <strong>themes\Butterfly\layout\includes\head.pug</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include ./third-party/aplayer.pug</span><br><span class="line"></span><br><span class="line">12</span><br></pre></td></tr></tbody></table></figure><h2 id="2-创建aplayer-pug"><a href="#2-创建aplayer-pug" class="headerlink" title="2.创建aplayer.pug"></a>2.创建<strong>aplayer.pug</strong></h2><p>去往<strong>themes\Butterfly\layout\includes\third-party</strong>下创建<strong>aplayer.pug</strong> 内容如下</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if theme.aplayer &amp;&amp; theme.aplayer.enable</span><br><span class="line">.aplayer(data-id=theme.aplayer.id data-server=theme.aplayer.server data-type=theme.aplayer.type data-fixed=theme.aplayer.fixed data-mini=theme.aplayer.mini data-listFolded=theme.aplayer.listFolded data-order=theme.aplayer.order data-preload=theme.aplayer.preload)</span><br><span class="line">each item in theme.aplayer.css</span><br><span class="line">link(rel='stylesheet', href=item)</span><br><span class="line">each item in theme.aplayer.js</span><br><span class="line">script(src=item)</span><br><span class="line">123456</span><br></pre></td></tr></tbody></table></figure><h2 id="3-打开你主题的配置文件"><a href="#3-打开你主题的配置文件" class="headerlink" title="3.打开你主题的配置文件"></a>3.打开你主题的配置文件</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  enable: true</span><br><span class="line">  js:</span><br><span class="line">    - https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.js</span><br><span class="line">    - https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js</span><br><span class="line">  css:</span><br><span class="line">    - https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.css</span><br><span class="line">  id: 2841149029</span><br><span class="line">  server: netease </span><br><span class="line">  type: playlist</span><br><span class="line">  fixed: 'true'</span><br><span class="line">  order: random</span><br><span class="line">  preload: none</span><br><span class="line">  listFolded: 'false'</span><br><span class="line"></span><br><span class="line">123456789101112131415</span><br></pre></td></tr></tbody></table></figure><p><strong>参数见下图</strong></p><p><img src="https://img-blog.csdnimg.cn/img_convert/6389966547c60a939756550e1db52ad9.png" alt="img"></p><h2 id="4-收入侧边栏"><a href="#4-收入侧边栏" class="headerlink" title="4.收入侧边栏"></a>4.收入侧边栏</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/eca8020124e9598e060f63f6def22f0e.png" alt="image-20200924201332181"></p><p>我们已经可以看到博客上的Aplayer了，但是看起来会很突兀，所以我们接下来通过修改css实现收入侧边栏</p><p>我们只需要在css中加入以下代码即可实现收入侧边栏</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-fixed</span><span class="selector-class">.aplayer-narrow</span> </span><br><span class="line">  <span class="selector-class">.aplayer-body</span></span><br><span class="line">    <span class="selector-tag">left</span>: <span class="selector-tag">-66px</span> !<span class="selector-tag">important</span></span><br><span class="line">  <span class="selector-class">.aplayer-body</span><span class="selector-pseudo">:hover</span></span><br><span class="line">    <span class="selector-tag">left</span>: 0<span class="selector-tag">px</span> !<span class="selector-tag">important</span></span><br><span class="line">12345</span><br></pre></td></tr></tbody></table></figure><h2 id="5-歌词修改"><a href="#5-歌词修改" class="headerlink" title="5.歌词修改"></a>5.歌词修改</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.aplayer.aplayer-fixed .aplayer-lrc {</span><br><span class="line">    display: block;</span><br><span class="line">    position: fixed;</span><br><span class="line">    bottom: 10px;</span><br><span class="line">    left: 0;</span><br><span class="line">    right: 0;</span><br><span class="line">    margin: 0;</span><br><span class="line">    z-index: 98;</span><br><span class="line">    pointer-events: none;</span><br><span class="line">    text-shadow: -1px -1px 0 #fff;    //阴影</span><br><span class="line">}</span><br><span class="line">//颜色大小</span><br><span class="line">.aplayer .aplayer-lrc p </span><br><span class="line"></span><br><span class="line">1234567891011121314</span><br></pre></td></tr></tbody></table></figure><h2 id="6-最后"><a href="#6-最后" class="headerlink" title="6.最后"></a>6.最后</h2><p>替换配置文件中的Aplayer.min.css即可</p><p><strong>效果</strong></p><p><img src="https://img-blog.csdnimg.cn/img_convert/965f9100079a018df226b0b66bc7b0c3.png" alt="image-20200924204032984"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/774b2fe58c02645190e84aa7a702deef.png" alt="img"></p><p>butterfly主题可能会与目录隐藏按钮冲突</p><p>在inject通过css修改位置即可。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - '&lt;style type="text/css"&gt;#toggle-sidebar {bottom: 80px}&lt;/style&gt;'</span><br><span class="line">123</span><br></pre></td></tr></tbody></table></figure><p><strong>参考:</strong></p><p><a href="https://demo.jerryc.me/">JerryC</a></p><p><a href="https://aplayer.js.org/#/zh-Hans/">Aplayer文档</a></p><p><strong>效果演示:</strong></p><p><a href="https://www.codelorin.xyz/">博客传送门</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在Hexo博客Butterfly主题开启Aplayer和“音乐”页面</title>
      <link href="posts/75b5.html"/>
      <url>posts/75b5.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>首先，以管理员身份运行cmd，然后定位到你博客的根目录下<br>接着，依次执行三条命令</p><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo new page music</span><br><span class="line"></span><br><span class="line">npm install aplayer</span><br><span class="line"></span><br><span class="line">npm install --save hexo-tag-aplayer</span><br><span class="line"><span class="number">12345</span></span><br></pre></td></tr></tbody></table></figure><p>接着，假如安装成功，则可以定位到<br>主题目录\layout\includes<br>看看layout.pug应该出现以下字段</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> head</span><br><span class="line">    include ./head.pug</span><br><span class="line">     link(rel="stylesheet" href="APlayer.min.css")</span><br><span class="line">     div(id="aplayer")</span><br><span class="line">     script(src="https://cdn.jsdelivr.net/gh/radium-bit/res@master/live2d/autoload.js" async)</span><br><span class="line">     script(src="https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js" async)</span><br><span class="line">  body</span><br><span class="line">1234567</span><br></pre></td></tr></tbody></table></figure><p>若不存在</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">link(rel="stylesheet" href="APlayer.min.css")</span><br><span class="line">div(id="aplayer")</span><br><span class="line">script(src="https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js" async)</span><br><span class="line">123</span><br></pre></td></tr></tbody></table></figure><p>若不存在请手动加上。一定要注意缩进与上述结构一致！因为缩进是Pug的表达方式。<br>接着，查看aplayer.pug，若文件不存在。请创建文件并复制以下内容手动加上</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">link(rel="stylesheet" type='text/css', href="https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css")</span><br><span class="line">script(type='text/javascript', src="https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js")</span><br><span class="line">script(type='text/javascript', src="https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js")</span><br><span class="line">123</span><br></pre></td></tr></tbody></table></figure><p>最后，返回博客根目录，查看_config.yml在最后添加以下代码</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#aplayer</span></span><br><span class="line"><span class="attr">aplayer:</span> </span><br><span class="line">  <span class="attr">script_dir:</span> <span class="string">js</span>                      <span class="comment"># Public 目录下脚本目录路径，默认: 'assets/js'</span></span><br><span class="line">  <span class="attr">style_dir:</span> <span class="string">css</span>                         <span class="comment"># Public 目录下样式目录路径，默认: 'assets/css'</span></span><br><span class="line">  <span class="comment">#cdn: http://xxx/aplayer.min.js                # 引用 APlayer.js 外部 CDN 地址 (默认不开启)</span></span><br><span class="line">  <span class="comment">#style_cdn: http://xxx/aplayer.min.css         # 引用 APlayer.css 外部 CDN 地址 (默认不开启)</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span>                                  <span class="comment"># MetingJS 支持</span></span><br><span class="line">  <span class="comment">#meting_api: http://xxx/api.php                # 自定义 Meting API 地址</span></span><br><span class="line">  <span class="comment">#meting_cdn: http://xxx/Meing.min.js           # 引用 Meting.js 外部 CDN 地址 (默认不开启)</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">true</span>                            <span class="comment"># 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启</span></span><br><span class="line">  <span class="comment">#externalLink: http://xxx/aplayer.min.js       # 老版本参数，功能与参数 cdn 相同meting: true</span></span><br><span class="line"><span class="number">1234567891011</span></span><br></pre></td></tr></tbody></table></figure><p>并调整</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></tbody></table></figure><p>最后，在 博客根目录\source\music\index.md使用以下格式</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我的歌单</span><br><span class="line">date: 2019-05-17 16:14:00</span><br><span class="line">cover: https://cdn.jsdelivr.net/gh/radium-bit/res@latest/Music.jpg</span><br><span class="line">type: "music"</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#0c74d6</span> <span class="attr">size</span>=<span class="string">3</span> <span class="attr">face</span>=<span class="string">"黑体"</span>&gt;</span></span><span class="strong">**这是歌单介绍，如果不需要刻意留空**</span><span class="xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">{% meting "697054881" "netease" "playlist" %}</span><br><span class="line">12345678910</span><br></pre></td></tr></tbody></table></figure><p>那一串数字是歌单ID，“netease”为网易云音乐。详细参数用法请参考<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">官方文档</a><br>歌单ID提取方法是以链接分享某个歌单<br>例如<br><a href="https://music.163.com/playlist?id=313418853&amp;userid=1362990007">https://music.163.com/playlist?id=313418853&amp;userid=1362990007</a></p><p>红色部分就是歌单ID了</p><p>写入完毕后，回到CMD。输入</p><figure class="highlight cmd"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></tbody></table></figure><p>参考：<a href="https://blog.csdn.net/qq_46435629/article/details/106295515#comments_13018545">https://blog.csdn.net/qq_46435629/article/details/106295515#comments_13018545</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tyora+PicGo</title>
      <link href="posts/dadf.html"/>
      <url>posts/dadf.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>打开 PicGo 软件的设置界面，进行 Server 的设置：</p><p>PicGo 设置 -&gt; 设置 Server，开启 Server，监听地址不用进行更改，监听端口的值设置为 36677，这个值的获取在 Typora 软件中，下面会提到：</p><p><img src="https://i.loli.net/2021/02/08/D7WwXscUxt3OITY.png" alt="image-20210114154721906"></p><p><img src="https://i.loli.net/2021/02/08/D7WwXscUxt3OITY.png" alt="image-20210114154740960"></p><p>接下来进行 Typora 的设置，Typora 的安装我就不说了，相信大家都会安装，打开 typora 软件，依次打开步骤为：文件 -&gt; 偏好设置 -&gt; 图像，具体配置参考下面的图中的配置：</p><p><img src="https://i.loli.net/2021/01/14/yEwoXKPDmJ5CRMp.png" alt="image-20210114155003823"></p><p>之后编辑Typora文件时图片得到上传</p><p><img src="https://i.loli.net/2021/01/14/KIomMRveTVy84GJ.png" alt="image-20210114155139422"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SMMS图床配置</title>
      <link href="posts/d7af.html"/>
      <url>posts/d7af.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>如果已经有 SMMS 账号的同学可以略过这一步</p><p>smms 账号注册<a href="https://sm.ms/register">点击这里</a></p><p><img src="https://i.loli.net/2021/01/14/pxKbN23R7mWfkAD.png" alt="img"></p><p>按要求填入信息即可，注册完成后去<a href="https://sm.ms/login">登录</a>。</p><h2 id="获取-token"><a href="#获取-token" class="headerlink" title="获取 token"></a>获取 token</h2><p>登录完成需要去自己的信息面板获取 token，面板入口如下所示：</p><p><img src="https://i.loli.net/2021/01/14/AVBSh4rTQjfkaFq.png" alt="img"></p><p><img src="https://i.loli.net/2021/01/14/ZpcE814k9vmANGP.png" alt="image-20210114150833407"></p><p><img src="https://i.loli.net/2021/01/14/sTJ9LYRQaZmtxG1.png" alt="image-20210114151020912"></p><h2 id="进入PicGo"><a href="#进入PicGo" class="headerlink" title="进入PicGo"></a>进入PicGo</h2><p>图床设置&gt;SM.MS图床&gt;设定Token</p><p><img src="https://i.loli.net/2021/01/14/nGqL6YC7Rhkraep.png" alt="image-20210114151041052"></p><p>然后就可以上传图片了</p><p><img src="https://i.loli.net/2021/01/14/29zhctuJkGQmTsd.png" alt="image-20210114151059643"></p><p><img src="https://i.loli.net/2021/01/14/A2VaTmbyCXQL6tJ.png" alt="image-20210114151239654"></p><p>可以在自己的SM.MS账号里看到自己成功上传的图片</p><p><img src="https://i.loli.net/2021/01/14/NlsbxJc59OiXhGj.png" alt="image-20210114151259061"></p><p>参考网站：<a href="https://www.yuque.com/dengbinhero/kb/mxgku2">https://www.yuque.com/dengbinhero/kb/mxgku2</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图床(github)</title>
      <link href="posts/dadf.html"/>
      <url>posts/dadf.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>新建仓库，点击进入Settings</p><p><img src="https://i.loli.net/2021/01/15/ftAauTeMw6ZXY1K.png"></p><p>点击进入Developer settings</p><p><img src="https://i.loli.net/2021/02/08/X6NR7tesMGuk3ET.png" alt="image-20210114115842777"></p><p>进入Personal access tokens</p><p><img src="https://i.loli.net/2021/01/15/adUVhf64btQRm9N.png" alt="image-20210114120030529"></p><p>自定义命名</p><p><img src="https://i.loli.net/2021/01/15/qDmLpVSj6lJcsIH.png" alt="image-20210114114332340"></p><p>复制好token</p><p><img src="https://i.loli.net/2021/01/15/xYfe6LkzhXW4IKt.png" alt="image-20210114114313037"></p><p>在PicGo里进入GitHub设置，自定义域名：<a href="https://cdn.jsdelivr.net/gh/%E8%AE%BE%E5%AE%9A%E7%9A%84%E4%BB%93%E5%BA%93%E5%90%8D">https://cdn.jsdelivr.net/gh/设定的仓库名</a></p><p><img src="https://i.loli.net/2021/01/15/UFaiYfVC9DMtOA8.png" alt="image-20210114114239158"></p><p>然后试着上传图片</p><p><img src="https://i.loli.net/2021/01/15/ewpPEArt2kafzyJ.png" alt="image-20210114115723427"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客部署到github上</title>
      <link href="posts/dadf.html"/>
      <url>posts/dadf.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>打开github，新建github仓库，注意：用户部署个人博客的github仓库的命名必须符合特定要求才行</p><p>（你的昵称+github.io）</p><p><img src="https://i.loli.net/2021/01/14/Fr5ukxRwmUynQPM.png" alt="image-20210114192426424"></p><p>接下来需要在博客根目录下安装个插件：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure><p>紧接着，将本地目录与 GitHub 关联起来，输入下面的命令行：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你的邮箱地址"</span></span><br></pre></td></tr></tbody></table></figure><p>输入后一直回车，然后在 <code>C:/Users/[username]</code> 目录下找到名为<code>.ssh</code> 的文件夹， 文件夹内会有两个文件，一个 <code>id_rsa.pub</code> 一个 <code>id_rsa</code>，用文本编辑器打开 <code>id_rsa.pub</code>，复制里面的的内容。 然后打开 Github，点击右上角的头像 <strong>Settings</strong> 选择 <strong>SSH and GPG keys</strong></p><p><img src="https://i.loli.net/2021/01/15/2zmKhA7ot19T3YB.png" alt="image-20210115160450777"></p><p><img src="https://i.loli.net/2021/01/15/piChGwb9ExMqeLI.png" alt="img"></p><p>点击 <strong>New SSH key</strong> 将之前复制的内容粘帖到 Key 的框中。 上面的 <strong>Title</strong> 可以随意，点击 <strong>Add SSH key</strong> 完成添加。</p><p><img src="https://i.loli.net/2021/01/15/U1B6bO7GneERNYj.png" alt="img"></p><p>然后回到 Git 的命令行界面，测试一下是否与 GitHub 连接成功。输入下面的命令行：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></tbody></table></figure><p>点击回车，然后会出现一个询问内容，输入 <code>yes</code>，回车，会出现一段内容，<code>Hi ! You've successfully authenticated, but GitHub doesnot provide shell access.</code>。 说明连接成功。此处这个 `` 应该是你 Github 的用户名。</p><p>安装完后要设置一下根目录下的_config.yml的文件</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: <span class="string">''</span></span><br></pre></td></tr></tbody></table></figure><p>配置为：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: 你的git仓库远程地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></tbody></table></figure><p>保存好后输入命令：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure><p>报错：RPC failed; curl 18 transfer closed with outstanding read data remaining</p><p>一，加大缓存区</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> http.postBuffer <span class="number">524288000</span></span><br></pre></td></tr></tbody></table></figure><p>二、少clone一些，–depth 1</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/flutter/flutter.git --depth <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure><p>–depth 1的含义是复制深度为1，就是每个文件只取最近一次提交，不是整个历史版本。</p><p>三、换协议<br>clone http方式换成SSH的方式，即 https:// 改为 git://<br>例如<code>git clone https://github.com/flutter/flutter.git</code><br>换成<code>git clone git://github.com/flutter/flutter.git</code></p><p>成功后就可以在自己的仓库看到上传的文件</p><p><img src="https://i.loli.net/2021/01/14/6587QSx2EgeqHmu.png" alt="image-20210114200715522"></p><p>用仓库名进行访问</p><p>参考网址：<a href="https://yafine-blog.cn/posts/4ab2.html">https://yafine-blog.cn/posts/4ab2.html</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
